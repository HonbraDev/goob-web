---
import { SITE_COLOR, SITE_TITLE } from "../consts";

export interface Props {
	title: string;
	description?: string;
	image?: string;
	imageAlt?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image, imageAlt } = Astro.props;
---

{/* Global Metadata */}
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

{/* Canonical URL */}
<link rel="canonical" href={canonicalURL} />

{/* Primary Meta Tags */}
<title>{title}{title !== SITE_TITLE && ` - ${SITE_TITLE}`}</title>
<meta name="title" content={title} />
{description && <meta name="description" content={description} />}

{/* Open Graph / Facebook */}
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:title" content={title} />
{description && <meta property="og:description" content={description} />}
{
	image && (
		<>
			<meta property="og:image" content={new URL(image, Astro.url)} />
			{imageAlt && <meta property="og:image:alt" content={imageAlt} />}
		</>
	)
}

{/* Twitter */}
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
{description && <meta property="twitter:description" content={description} />}
{image && <meta property="twitter:image" content={new URL(image, Astro.url)} />}

{/* Theme color (Discord / Chromium Android) */}
<meta name="theme-color" content={SITE_COLOR} />

{/* RSS Feed */}
<link
	rel="alternate"
	href="/rss.xml"
	type="application/rss+xml"
	title="RSS Feed"
/>
